#!/bin/bash
#
# RAID Array Status Check Script
# Created by Sebastian Grewe, Jammicron Technology

# Get count of RAID arrays
RAID_DEVICES=$(grep ^md -c /proc/mdstat)

# Get count of degraded arrays
RAID_STATUS=$(egrep "\[.*(=|>|\.).*\]" /proc/mdstat -c)

# Get RAID recovery, resync, or check status
RAID_RECOVER=$(grep recovery /proc/mdstat | awk '{print $4}')
RAID_RESYNC=$(grep resync /proc/mdstat | awk '{print $4}')
RAID_CHECK=$(grep check /proc/mdstat | awk '{print $4}')

# Check RAID status
if [[ -n "$RAID_RECOVER" ]]; then
    STATUS="WARNING - Checked $RAID_DEVICES arrays, recovering: $RAID_RECOVER"
    EXIT=1
elif [[ -n "$RAID_RESYNC" ]]; then
    STATUS="WARNING - Checked $RAID_DEVICES arrays, resync: $RAID_RESYNC"
    EXIT=1
elif [[ -n "$RAID_CHECK" ]]; then
    STATUS="OK - Checked $RAID_DEVICES arrays, check: $RAID_CHECK"
    EXIT=0
elif [[ "$RAID_STATUS" == "0" ]]; then
    STATUS="OK - Checked $RAID_DEVICES arrays."
    EXIT=0
else
    # Get detailed RAID status for failed arrays
    EXTENDED_RAID_STATUS=$(egrep "\[.*(=|>|\.|_).*\]" /proc/mdstat | awk '{print $2}' | uniq -c | xargs echo)
    STATUS="CRITICAL - Checked $RAID_DEVICES arrays, $RAID_STATUS degraded. Details: $EXTENDED_RAID_STATUS"
    EXIT=2
fi

# Print status and exit
echo "$STATUS"
exit "$EXIT"